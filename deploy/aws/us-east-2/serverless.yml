service: letsvalidate-api-aws-us-east-2
frameworkVersion: '3'

provider:
  name: aws
  runtime: python3.10
  region: us-east-2

  # Not random, came up with based on good data
  memorySize: 256
  iam:
    role:
      statements:
        
        # Need to be able to read and write to Param Store -- store per-user Flickr OAuth token in Param Store
        - Effect: "Allow"
          Action:
            - "ssm:GetParameter"
            - "ssm:GetParameters"
            - "ssm:PutParameter"
          Resource: "arn:aws:ssm:us-east-2:959720795291:parameter/letsvalidate/*"


  httpApi:
    cors:
      allowedOrigins:
        - "https://letsvalidate.org"
    authorizers:
      letsvJwtAuthorizer:
        type: jwt
        identitySource: $request.header.Authorization
        issuerUrl: https://cognito-idp.us-east-2.amazonaws.com/us-east-2_YxLIxaw2F
        audience:
           - rme10ok7gdr32r7qgoei8tocv

constructs:
  worker-kv-updates:
    type: queue
    worker:
      handler: letsvalidate.util.aws_sqs.queue_worker

functions:

  oauth-callback:
    handler: cognito-oauth-callback.cognito_oauth_callback_webui_dev
    events:
      - httpApi:
          path: /oauth/callback
          method: get

  api-add-url:
    handler: api-add-url.letsvalidate_api_add_url
    events:
      - httpApi:
          path: /api/v001/monitored_url
          method: post
          authorizer:
            name: letsvJwtAuthorizer

  api-remove-url:
    handler: api-remove-url.letsvalidate_api_remove_url
    events:
      - httpApi:
          path: /api/v001/monitored_url
          method: delete
          authorizer:
            name: letsvJwtAuthorizer
    environment:
      SQS_QUEUE_URL: ${construct:worker-kv-updates.queueUrl}


plugins:
  - serverless-lift
  - serverless-python-requirements

custom:
  pythonRequirements:
    dockerizePip: true

package:
  patterns:
    - "!node_modules/**"
